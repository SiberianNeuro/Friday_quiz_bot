from app.database.mailing_sql import get_ids, update_active, get_winners
from app.services.winner_wrapper import winner_wrapper
from loader import dp, bot

from aiogram.dispatcher import FSMContext
from aiogram import types, Dispatcher
from aiogram.dispatcher.filters import Text

from app.services.states import LoadTest

import time

async def load_mailing(m: types.Message):
    await m.answer("–ü–æ–Ω—è–ª, –Ω–∞—á–∏–Ω–∞–µ–º —Ä–∞—Å—Å—ã–ª–∞—Ç—å.\n"
                   "–ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—à—å, –Ω–∞–ø–∏—à–∏ <b>/–æ—Ç–º–µ–Ω–∞</b>\n\n"
                   "–ê —Ç–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏ –º–Ω–µ –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏."
                   "–í–º–µ—Å—Ç–µ —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ —Ç–µ—Å—Ç")
    await LoadTest.message.set()


async def cancel_handler(m: types.Message, state: FSMContext):
    await state.finish()
    await m.answer("–†–∞—Å—Å—ã–ª–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")

async def start_mailing(m: types.Message, state: FSMContext):
    ids = await get_ids()
    try:
        await m.answer("–î–µ—Ä–∂–∏—Ç–µ—Å—å –∫—Ä–µ–ø—á–µ, –Ω–∞—á–∏–Ω–∞–µ–º —Ä–∞—Å—Å—ã–ª–∫—É.\n\n"
                       "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ–ª—å–∑—è üòà")
        for id in ids:
            bot.send_message(id[0], m.text)
            time.sleep(0.1)
    except ids is None:
        await m.answer("–ù–µ –≤—ã—à–ª–æ –¥–æ—Å—Ç–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ö–∞—Ä–∞—É–ª.")
    finally:
        await m.answer("–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞.")
        await state.finish()


async def get_losers(m: types.Message):
    await m.answer("–°–∫–æ–ø–∏—Ä—É–π –∏–∑ —Ç–∞–±–ª–∏—á–∫–∏ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –∫–æ–ª–æ–Ω–∫—É 'ID' –∏ –ø—Ä–∏—à–ª–∏ –º–Ω–µ,"
                   "–∞ –¥–∞–ª—å—à–µ —è —Å–∞–º.\n\n"
                   "–ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—à—å, –Ω–∞–ø–∏—à–∏ <b>/–æ—Ç–º–µ–Ω–∞</b>")


async def kick_losers(m: types.Message):
    winners = tuple(map(int, m.text.split('\n')))
    await update_active(winners)
    await m.answer(f"–ì–æ—Ç–æ–≤–æ. –¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π:\n\n"
                   f"{winner_wrapper()}")


def register_mailing_handlers(dp: Dispatcher):
    dp.register_message_handler(load_mailing, commands=['—Ä–∞—Å—Å—ã–ª–∫–∞'], is_admin=True)
    dp.register_message_handler(cancel_handler, commands=['–æ—Ç–º–µ–Ω–∞'], state="*")
    dp.register_message_handler(start_mailing, state=LoadTest.message)
    dp.register_message_handler(get_losers, commands=['–ø–æ–±–µ–¥–∏—Ç–µ–ª–∏'])